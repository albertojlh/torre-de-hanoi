1. Lógica do Jogo

feat: implementa regras básicas da Torre de Hanói  
- Valida movimento de disco (origem -> destino)  
- Impede disco maior sobre menor  
- Contador de movimentos  

feat: adiciona verificação de vitória automática  
- Checa se todos os discos estão na torre 3  
- Exibe mensagem de parabéns com número de movimentos  

refactor: melhora exibição ASCII das torres  
- Centraliza discos visualmente  
- Formatação dinâmica baseada no tamanho do maior disco  

2. Estruturas de Dados

feat: cria struct Disco e Torre  
- Lista encadeada para discos em cada torre  
- Tamanho do disco armazenado em `struct Disco`  

feat: implementa histórico com struct Partida  
- Armazena nome do jogador, data, discos e movimentos  
- Lista encadeada para múltiplas partidas  

3. Persistência de Dados

feat: salva histórico em arquivo texto  
- Formato: nome|discos|movimentos|data  
- Funções `salvarHistorico()` e `carregarHistorico()`  

fix: corrige leitura de arquivo de histórico  
- Problema: quebra de linha mal formatada  
- Solução: uso de `strcspn()` para remover '\n' 
 
4. Interface do Usuário

feat: adiciona menu interativo  
- Opções: Novo Jogo, Histórico, Sair  
- Valida entrada do usuário com `limparBuffer()`  

feat: exibe histórico formatado no terminal  
- Ordena por data (mais recente primeiro)  
- Mostra nome, discos, movimentos e data  

5. Otimizações e Correções

fix: resolve vazamento de memória ao reiniciar jogo  
- Libera discos alocados com `free()`  

perf: otimiza inicialização do jogo  
- Pré-aloca memória para discos em loop único  

style: padroniza comentários e nomes de variáveis  
- Documenta funções principais  
- Renomeia `topo` para `topo_disco` (mais descritivo)  

6. Features Extras

feat: adiciona data/hora automática no histórico  
- Usa `time.h` para registrar data da partida  
- Formato: dd/mm/aaaa hh:mm  

feat: valida número de discos (3 a 8)  
- Impede entrada inválida no menu  
- Mensagem de erro explicativa  
